变量
{
	全局:
		26: masterise_player_text_Global
		27: masterise_map_text_Global

	玩家:
		26: property_player
		27: masteries_player
		28: id_player
		30: TF_DY
}

子程序
{
	8: _Reset
	9: _Refresh
	10: _Initialize_Property
	11: _Initialize_Masteries
	12: _Time
	13: _Blood
}

规则("TEST")
{
	事件
	{
		持续 - 全局;
	}
}

规则("Main")
{
	事件
	{
		玩家加入比赛;
		双方;
		全部;
	}

	动作
	{
		"天赋文本WB"
		全局.masterise_map_text_Global = 数组(自定义字符串("0号初始文本"), 自定义字符串("玻璃大炮"), 自定义字符串("斯塔缇克电刃"), 自定义字符串("非酋"), 自定义字符串("败血症"), 自定义字符串("不朽之心"),
			自定义字符串("扁酒壶"), 自定义字符串("超级标志"), 自定义字符串("纵火狂"), 自定义字符串("44号药剂"), 自定义字符串("变异橘子"), 自定义字符串("彩票"), 自定义字符串("单片眼镜"), 自定义字符串("电子羊"),
			自定义字符串("伽马射线"), 自定义字符串("皇家空军勋章"), 自定义字符串("黑客工具"), 自定义字符串("黑暗面具"), 自定义字符串("充电宝"), 自定义字符串("核能电池"), 自定义字符串("滑板鞋"), 自定义字符串("弹药库"));
		"天赋文本HUD"
		全局.masterise_player_text_Global = 数组(自定义字符串("0号初始文本"), 自定义字符串("玻璃大炮——攻击力提高500%，攻击有25%可能秒杀自己。\r\n			pong！awsl"), 自定义字符串(
			"斯塔缇克电刃——攻击是会连锁伤害周围的敌方。\r\n			兹~爽！"), 自定义字符串("非酋：没有任何属性。\r\n			老倒霉蛋了"), 自定义字符串("败血症：伤口无法凝结，受到伤害后会持续掉血。\r\n			啊啊啊啊，创可贴！！！"),
			自定义字符串("不朽之心：死亡后会复活，cd60。\r\n			这心怎么看起来干巴巴的？"), 自定义字符串("扁酒壶：攻击力提高100%，防御力降低50%。\r\n			对于某些人来说，这就是生活意义。"), 自定义字符串(
			"超级标志：全属性提高30%。\r\n			我 就 是 超 人 ！"), 自定义字符串("纵火狂：攻击赋带燃烧效果。\r\n			fffffffff"), 自定义字符串(
			"44号药剂：蹲+互动，不死15秒，结束立即死亡，无视不朽。\r\n			呕！这也太难喝了！"), 自定义字符串("变异橘子：血量调高100%，败血症失效。\r\n			嗯，我可不像得败血症。"), 自定义字符串(
			"彩票：获得777颗弹药！\r\n			你感到如此的幸运...和孤独。"), 自定义字符串("单片眼镜：攻击沉默敌人\r\n			空气中的阿蒙成分增多了..."), 自定义字符串("电子羊：可以额外进行一次跳跃cd4\r\n			仿生人也会做梦吗？"),
			自定义字符串("伽马射线：子弹穿透墙面\r\n			没有什么可以阻挡你了！"), 自定义字符串("皇家空军勋章：在空中伤害翻倍\r\n			法鸡是谁？"), 自定义字符串("黑客工具：不在被入侵\r\n			让我试试，哈！搞定了！"), 自定义字符串(
			"黑暗面具：长按空格飞行，减少50%生命\r\n			等价交换！稳赚不亏！"), 自定义字符串("充电宝：大招被动充能加快100%\r\n			妈妈再也不用担心我的电量了~"), 自定义字符串("核能电池：立即充满一次大招\r\n			抛瓦！"),
			自定义字符串("滑板鞋：增加30%移动速度。\r\n			摩擦摩擦，是魔鬼的步伐。"), 自定义字符串("弹药库：弹药增加100%。\r\n			突突突突突！"));
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("额外生命"), 事件玩家.property_player[1]), 无, 无, 左边, 2, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("造成伤害"), 字符串("{0}%", 事件玩家.property_player[2])), 无, 无, 左边, 3, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("移动速度"), 字符串("{0}%", 事件玩家.property_player[3])), 无, 无, 左边, 4, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("释放治疗"), 字符串("{0}%", 事件玩家.property_player[4])), 无, 无, 左边, 5, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("受到治疗"), 字符串("{0}%", 事件玩家.property_player[5])), 无, 无, 左边, 6, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("受到伤害"), 字符串("{0}%", 事件玩家.property_player[6])), 无, 无, 左边, 7, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		"规则"
		创建HUD文本(事件玩家, 自定义字符串("作者：HUGH#52711   \r\n人数不够请房主手动进入比赛模式  \r\n出现恶性bug请房主手动复位\r\n[互动+蹲+跳跃]\r\n项目地址在简介"), 无, 无, 右边, 1, 白色, 蓝色, 白色,
			可见和字符串, 默认可见度);
		调用子程序(_Initialize_Property);
		调用子程序(_Initialize_Masteries);
		创建HUD文本(事件玩家, 自定义字符串("{0}", 全局.masterise_player_text_Global[事件玩家.masteries_player[0]]), 无, 无, 右边, 0, 黄色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 自定义字符串("{0}", 全局.masterise_player_text_Global[事件玩家.masteries_player[1]]), 无, 无, 右边, 0, 黄色, 白色, 白色, 可见和字符串, 默认可见度);
		创建地图文本(所有玩家(所有队伍), 自定义字符串("{0},{1}", 全局.masterise_map_text_Global[事件玩家.masteries_player[0]],
			全局.masterise_map_text_Global[事件玩家.masteries_player[1]]), 事件玩家, 1.500, 根据表面截取, 可见，位置和字符串, 黄色, 默认可见度);
	}
}

规则("Replay")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 互动) == 真;
	}

	动作
	{
		调用子程序(_Reset);
	}
}

规则("Respawn")
{
	事件
	{
		玩家阵亡;
		双方;
		全部;
	}

	动作
	{
		调用子程序(_Initialize_Property);
		调用子程序(_Initialize_Masteries);
	}
}

规则("Re_interval")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		游戏正在进行中 == 真;
	}

	动作
	{
		调用子程序(_Initialize_Property);
		调用子程序(_Initialize_Masteries);
	}
}

规则("_Reset")
{
	事件
	{
		子程序;
		_Reset;
	}

	动作
	{
		事件玩家.id_player = 0;
		移除玩家的所有生命值。(所有玩家(所有队伍));
		事件玩家.property_player = 0;
		调用子程序(_Initialize_Property);
		事件玩家.masteries_player = 0;
		调用子程序(_Initialize_Masteries);
		消除所有图标;
		消除所有效果;
	}
}

规则("_Refresh")
{
	事件
	{
		子程序;
		_Refresh;
	}

	动作
	{
		设置最大生命值(事件玩家, 事件玩家.property_player[1]);
		调用子程序(_Blood);
		设置造成伤害(事件玩家, 事件玩家.property_player[2]);
		设置移动速度(事件玩家, 事件玩家.property_player[3]);
		设置造成治疗(事件玩家, 事件玩家.property_player[4]);
		设置受到治疗(事件玩家, 事件玩家.property_player[5]);
		设置受到伤害(事件玩家, 事件玩家.property_player[6]);
	}
}

规则("_Initialize_Property")
{
	事件
	{
		子程序;
		_Initialize_Property;
	}

	动作
	{
		事件玩家.property_player[0] = 随机整数(1, 10);
		"最大生命值"
		事件玩家.property_player[7] = 100;
		设置最大生命值(事件玩家, 事件玩家.property_player[7]);
		"生命池"
		事件玩家.property_player[1] = 事件玩家.property_player[0] * 随机整数(10, 40);
		调用子程序(_Blood);
		"攻击"
		事件玩家.property_player[2] = 随机整数(80, 120);
		设置造成伤害(事件玩家, 事件玩家.property_player[2]);
		"速度"
		事件玩家.property_player[3] = 随机整数(95, 120);
		设置移动速度(事件玩家, 事件玩家.property_player[3]);
		"造成治疗"
		事件玩家.property_player[4] = 随机整数(80, 120);
		设置造成治疗(事件玩家, 事件玩家.property_player[4]);
		"受到治疗"
		事件玩家.property_player[5] = 随机整数(80, 120);
		设置受到治疗(事件玩家, 事件玩家.property_player[5]);
		"防御"
		事件玩家.property_player[6] = 100;
		设置受到伤害(事件玩家, 事件玩家.property_player[6]);
	}
}

规则("_Initialize_Masteries")
{
	事件
	{
		子程序;
		_Initialize_Masteries;
	}

	动作
	{
		"天赋抽奖初始化"
		事件玩家.masteries_player[0] = 0;
		事件玩家.masteries_player[1] = 0;
		"天赋抽奖最大值"
		事件玩家.masteries_player[2] = 21;
		While(事件玩家.masteries_player[0] == 事件玩家.masteries_player[1]);
			事件玩家.masteries_player[0] = 随机整数(1, 事件玩家.masteries_player[2]);
			事件玩家.masteries_player[1] = 随机整数(1, 事件玩家.masteries_player[2]);
		End;
		"玻璃大炮"
		If(数组包含(事件玩家.masteries_player, 1) == 真);
			事件玩家.property_player[2] = 事件玩家.property_player[2] * 5;
		End;
		"不朽之心"
		If(数组包含(事件玩家.masteries_player, 5) == 真);
			事件玩家.TF_DY[2] = 1;
		End;
		"扁酒壶"
		If(数组包含(事件玩家.masteries_player, 6) == 真);
			事件玩家.property_player[2] = 取整(事件玩家.property_player[2] * 3, 上);
			事件玩家.property_player[6] = 取整(事件玩家.property_player[6] * 1.500, 上);
		End;
		"超级标志"
		If(数组包含(事件玩家.masteries_player, 7) == 真);
			事件玩家.property_player[1] = 取整(事件玩家.property_player[1] * 1.300, 上);
			事件玩家.property_player[2] = 取整(事件玩家.property_player[2] * 1.300, 上);
			事件玩家.property_player[3] = 取整(事件玩家.property_player[3] * 1.300, 上);
			事件玩家.property_player[4] = 取整(事件玩家.property_player[4] * 1.300, 上);
			事件玩家.property_player[5] = 取整(事件玩家.property_player[5] * 1.300, 上);
			事件玩家.property_player[6] = 取整(事件玩家.property_player[6] * 0.700, 上);
		End;
		"编译橘子"
		If(数组包含(事件玩家.masteries_player, 10) == 真);
			事件玩家.property_player[1] = 取整(事件玩家.property_player[1] * 2, 上);
		End;
		"彩票"
		If(数组包含(事件玩家.masteries_player, 11) == 真);
			等待(4, 无视条件);
			设置弹药(事件玩家, 0, 777);
		End;
		"黑暗面具"
		If(数组包含(事件玩家.masteries_player, 17) == 真);
			事件玩家.property_player[7] = 取整(事件玩家.property_player[7] * 0.500, 上);
			事件玩家.property_player[1] = 取整(事件玩家.property_player[1] * 0.600, 上);
		End;
		"核能电池"
		If(数组包含(事件玩家.masteries_player, 19) == 真);
			设置终极技能充能(事件玩家, 100);
		End;
		"滑板鞋"
		If(数组包含(事件玩家.masteries_player, 20) == 真);
			事件玩家.property_player[3] = 取整(事件玩家.property_player[3] * 1.300, 上);
		End;
		"玻璃大炮"
		If(数组包含(事件玩家.masteries_player, 21) == 真);
			等待(5, 无视条件);
			设置最大弹药(事件玩家, 0, 最大弹药量(事件玩家, 0) * 2);
			设置最大弹药(事件玩家, 1, 最大弹药量(事件玩家, 1) * 2);
		End;
		调用子程序(_Refresh);
	}
}

规则("_Time")
{
	事件
	{
		子程序;
		_Time;
	}
}

规则("_Blood")
{
	事件
	{
		子程序;
		_Blood;
	}

	动作
	{
		移除玩家的生命池(事件玩家.id_player[0]);
		为玩家添加生命池(事件玩家, 生命值, 事件玩家.property_player[1], 真, 真);
		事件玩家.id_player[0] = 最后创建的生命池;
	}
}