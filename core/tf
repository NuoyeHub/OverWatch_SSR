变量
{
	玩家:
		26: sx
		27: HUDWB
		28: TF
		29: TF_WB
		30: TF_DY
		31: DD
		32: TF_Max
		33: Time
		35: TF_WB_TD
		36: id
}

子程序
{
	8: SX_SX
	9: SX_CSH
	12: TF
	13: SX_HUD
	14: TF_XGDY
	15: SM_BD
	17: RESPAWN
}

禁用 规则("==========================================================全局=============================================================")
{
	事件
	{
		持续 - 全局;
	}
}

规则("//负载")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		创建HUD文本(主机玩家, 字符串("{0}：{1}", 字符串("服务器负载"), 服务器负载), 无, 无, 左边, 100, 白色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(主机玩家, 字符串("{0}：{1}", 字符串("服务器负载平均值"), 字符串("{0}%", 服务器负载平均值)), 无, 无, 左边, 101, 白色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(主机玩家, 字符串("{0}：{1}", 字符串("服务器负载峰值"), 字符串("{0}%", 服务器负载峰值)), 无, 无, 左边, 102, 白色, 白色, 白色, 可见和字符串, 默认可见度);
	}
}

禁用 规则("//Debug 机器人生成")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		按钮被按下(主机玩家, 互动) == 真;
	}

	动作
	{
		生成机器人(英雄(黑百合), 所有队伍, -1, 矢量(-1.856, 1.551, 6.125), 矢量(0, 0, 0));
	}
}

禁用 规则("//Debug 机器人删除")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 蹲下) == 真;
		按钮被按下(事件玩家, 互动) == 真;
	}

	动作
	{
		移除所有机器人;
	}
}

禁用 规则("//关闭游戏预设条件")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		游戏正在进行中 == 真;
	}

	动作
	{
		关闭游戏预设完成条件;
		设置比赛时间(3000);
		等待(2990, 无视条件);
		如条件为”真“则循环;
	}
}

规则("//关闭游戏等待")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		游戏正在进行中 != 真;
	}

	动作
	{
		设置比赛时间(1);
	}
}

禁用 规则("主程序")
{
	事件
	{
		持续 - 全局;
	}
}

规则("……主程序")
{
	事件
	{
		玩家加入比赛;
		双方;
		全部;
	}

	动作
	{
		调用子程序(SX_HUD);
		调用子程序(SX_CSH);
		调用子程序(TF);
	}
}

规则("……复活")
{
	事件
	{
		玩家阵亡;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 5) == 假;
	}

	动作
	{
		调用子程序(RESPAWN);
	}
}

禁用 规则("子程序")
{
	事件
	{
		持续 - 全局;
	}
}

规则("@->属性初始化 模块 /sx_csh")
{
	事件
	{
		子程序;
		SX_CSH;
	}

	动作
	{
		事件玩家.sx[1] = 随机整数(1, 10);
		"生命"
		事件玩家.sx[2] = 事件玩家.sx[1] * 随机整数(10, 40);
		调用子程序(SM_BD);
		"攻击"
		事件玩家.sx[3] = 随机整数(80, 120);
		设置造成伤害(事件玩家, 事件玩家.sx[3]);
		"速度"
		事件玩家.sx[4] = 随机整数(95, 120);
		设置移动速度(事件玩家, 事件玩家.sx[4]);
		"受到治疗"
		事件玩家.sx[5] = 随机整数(80, 120);
		设置受到治疗(事件玩家, 事件玩家.sx[5]);
		"造成治疗"
		事件玩家.sx[6] = 随机整数(80, 120);
		设置造成治疗(事件玩家, 事件玩家.sx[6]);
		"防御"
		事件玩家.sx[7] = 100;
		设置受到伤害(事件玩家, 事件玩家.sx[7]);
	}
}

规则("@->属性刷新 模块 /sx_sx")
{
	事件
	{
		子程序;
		SX_SX;
	}

	动作
	{
		调用子程序(SM_BD);
		设置造成伤害(事件玩家, 事件玩家.sx[3]);
		设置移动速度(事件玩家, 事件玩家.sx[4]);
		设置受到治疗(事件玩家, 事件玩家.sx[5]);
		设置造成治疗(事件玩家, 事件玩家.sx[6]);
		设置受到伤害(事件玩家, 事件玩家.sx[7]);
	}
}

规则("@->生命值变动 模块 /SM_BD")
{
	事件
	{
		子程序;
		SM_BD;
	}

	动作
	{
		移除玩家的生命池(事件玩家.id[0]);
		为玩家添加生命池(事件玩家, 生命值, 事件玩家.sx[2], 真, 真);
		事件玩家.id[0] = 最后创建的生命池;
	}
}

规则("@->全局文本 模块 /sx_hud")
{
	事件
	{
		子程序;
		SX_HUD;
	}

	动作
	{
		"天赋文本WB"
		事件玩家.TF_WB_TD = 数组(自定义字符串("空文本"), 自定义字符串("玻璃大炮"), 自定义字符串("斯塔缇克电刃"), 自定义字符串("非酋"), 自定义字符串("败血症"), 自定义字符串("不朽之心"), 自定义字符串("扁酒壶"),
			自定义字符串("超级标志"), 自定义字符串("纵火狂"), 自定义字符串("44号药剂"), 自定义字符串("变异橘子"), 自定义字符串("彩票"), 自定义字符串("单片眼镜"), 自定义字符串("电子羊"), 自定义字符串("伽马射线"),
			自定义字符串("皇家空军勋章"));
		"天赋文本HUD"
		事件玩家.TF_WB = 数组(自定义字符串("空文本"), 自定义字符串("玻璃大炮——攻击力提高500%，攻击有25%可能秒杀自己。\r\n			pong！awsl"), 自定义字符串(
			"斯塔缇克电刃——攻击是会连锁伤害周围的敌方。\r\n			兹~爽！"), 自定义字符串("非酋：没有任何属性。\r\n			老倒霉蛋了"), 自定义字符串("败血症：伤口无法凝结，受到伤害后会持续掉血。\r\n			啊啊啊啊，创可贴！！"),
			自定义字符串("不朽之心：死亡后会复活，cd60。\r\n			这心怎么看起来干巴巴的？"), 自定义字符串("扁酒壶：攻击力提高100%，防御力降低50%。\r\n			对于某些人来说，这就是生活意义。"), 自定义字符串(
			"超级标志：全属性提高30%。\r\n			我 就 是 超 人 ！"), 自定义字符串("纵火狂：攻击赋带燃烧效果。\r\n			ffffffffffffff"), 自定义字符串(
			"44号药剂：按蹲+互动，不死效果30秒，结束立即死亡。\r\n			这也太难喝了！"), 自定义字符串("变异橘子：血量调高100%，败血症失效。\r\n			嗯，我可不像得败血症。"), 自定义字符串(
			"彩票：获得777颗弹药！\r\n			你感到如此的幸运...和孤独。"), 自定义字符串("单片眼镜：攻击沉默敌人\r\n			空气中的阿蒙成分增多了..."), 自定义字符串("电子羊：可以额外进行一次跳跃cd4\r\n			仿生人也会做梦吗？"),
			自定义字符串("伽马射线：子弹穿透墙面\r\n			没有什么可以阻挡你了！"), 自定义字符串("皇家空军勋章：在空中伤害翻倍\r\n			法鸡是谁？"));
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 字符串("等级"), 事件玩家.sx[1]), 无, 无, 左边, 0, 红色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("额外生命"), 事件玩家.sx[2]), 无, 无, 左边, 2, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("造成伤害"), 字符串("{0}%", 事件玩家.sx[3])), 无, 无, 左边, 3, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("受到治疗"), 字符串("{0}%", 事件玩家.sx[5])), 无, 无, 左边, 4, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("造成治疗"), 字符串("{0}%", 事件玩家.sx[6])), 无, 无, 左边, 5, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("移动速度"), 字符串("{0}%", 事件玩家.sx[4])), 无, 无, 左边, 6, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("受到伤害"), 字符串("{0}%", 事件玩家.sx[7])), 无, 无, 左边, 7, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		"规则"
		创建HUD文本(事件玩家, 自定义字符串("随机天赋\n作者：HUGH#52711   \r\n人数不够请房主手动进入比赛模式  \r\n未完成，有兴趣的老哥"), 无, 无, 右边, 1, 白色, 蓝色, 白色, 可见和字符串, 默认可见度);
		"天赋"
		创建HUD文本(事件玩家, 事件玩家.TF_DY[0], 无, 无, 右边, 0, 黄色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 事件玩家.TF_DY[1], 无, 无, 右边, 0, 黄色, 白色, 白色, 可见和字符串, 默认可见度);
		创建地图文本(所有玩家(所有队伍), 字符串("{0}，{1}", 事件玩家.TF_DY[5], 事件玩家.TF_DY[6]), 事件玩家, 2, 根据表面截取, 可见，位置和字符串, 黄色, 默认可见度);
	}
}

规则("@->复活 模块/respawn")
{
	事件
	{
		子程序;
		RESPAWN;
	}

	动作
	{
		"用于等待击杀等级调用"
		等待(1, 无视条件);
		调用子程序(SX_CSH);
		"天赋初始化"
		调用子程序(TF);
		消除图标(事件玩家.id[1]);
		事件玩家.TF_DY[7] = 0;
		事件玩家.TF_DY[8] = 0;
	}
}

规则("@->天赋初始化 模块 /TF")
{
	事件
	{
		子程序;
		TF;
	}

	动作
	{
		"天赋抽奖初始化"
		事件玩家.TF[0] = 0;
		事件玩家.TF[1] = 0;
		"天赋抽奖最大值"
		事件玩家.TF_Max = 15;
		While(事件玩家.TF[0] == 事件玩家.TF[1]);
			事件玩家.TF[0] = 随机整数(1, 事件玩家.TF_Max);
			事件玩家.TF[1] = 随机整数(1, 事件玩家.TF_Max);
		End;
		调用子程序(TF_XGDY);
		"天赋文本调用"
		事件玩家.TF_DY[0] = 事件玩家.TF_WB[事件玩家.TF[0]];
		事件玩家.TF_DY[1] = 事件玩家.TF_WB[事件玩家.TF[1]];
		"天赋文本调用"
		事件玩家.TF_DY[5] = 事件玩家.TF_WB_TD[事件玩家.TF[0]];
		事件玩家.TF_DY[6] = 事件玩家.TF_WB_TD[事件玩家.TF[1]];
	}
}

规则("@->天赋效果调用 模块 /TF_XGDY")
{
	事件
	{
		子程序;
		TF_XGDY;
	}

	动作
	{
		"玻璃大炮"
		If(数组包含(事件玩家.TF, 1) == 真);
			事件玩家.sx[3] = 事件玩家.sx[3] * 5;
		End;
		"不朽之心"
		If(数组包含(事件玩家.TF, 5) == 真);
			事件玩家.TF_DY[2] = 1;
		End;
		"扁酒壶"
		If(数组包含(事件玩家.TF, 6) == 真);
			事件玩家.sx[3] = 取整(事件玩家.sx[3] * 3, 上);
			事件玩家.sx[7] = 取整(事件玩家.sx[7] * 1.500, 上);
		End;
		"超级标志"
		If(数组包含(事件玩家.TF, 7) == 真);
			事件玩家.sx[2] = 取整(事件玩家.sx[2] * 1.300, 上);
			事件玩家.sx[3] = 取整(事件玩家.sx[3] * 1.300, 上);
			事件玩家.sx[4] = 取整(事件玩家.sx[4] * 1.300, 上);
			事件玩家.sx[5] = 取整(事件玩家.sx[5] * 1.300, 上);
			事件玩家.sx[6] = 取整(事件玩家.sx[6] * 1.300, 上);
			事件玩家.sx[7] = 取整(事件玩家.sx[7] * 0.700, 上);
		End;
		"编译橘子"
		If(数组包含(事件玩家.TF, 10) == 真);
			事件玩家.sx[2] = 取整(事件玩家.sx[2], 上);
		End;
		"彩票"
		If(数组包含(事件玩家.TF, 11) == 真);
			等待(4, 无视条件);
			设置弹药(事件玩家, 0, 777);
		End;
		调用子程序(SX_SX);
	}
}

禁用 规则("天赋实现")
{
	事件
	{
		持续 - 全局;
	}
}

规则("1.玻璃大炮：攻击力提高100%，攻击有25%几率可能秒杀自己。pong！awsl")
{
	事件
	{
		玩家造成伤害;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 1) == 真;
	}

	动作
	{
		根据条件跳过(随机整数(1, 100) >= 25, 2);
		击杀(事件玩家, 无);
		大字体信息(事件玩家, 自定义字符串("啊！你碎了~"));
	}
}

规则("2.1斯塔缇克电刃：攻击是会连锁伤害周围的敌方。兹~爽！")
{
	事件
	{
		玩家造成伤害;
		队伍1;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 2) == 真;
	}

	动作
	{
		事件玩家.DD = 7;
		追踪玩家变量频率(事件玩家, DD, 0, 1, 速率及最终值);
		伤害(从数组中移除(范围内玩家(被攻击方, 7, 队伍2, 表面), 事件玩家), 事件玩家, 5);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 眼睛位置(被攻击方) + 矢量(随机实数(-3, 3), 随机实数(-2, 2), 随机实数(-3, 3)), 1);
		禁用 设置状态(从数组中移除(范围内玩家(事件玩家, 10, 所有队伍, 表面), 事件玩家), 事件玩家, 昏迷, 0.500);
		等待(0.120, 无视条件);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 眼睛位置(被攻击方) + 矢量(随机实数(-3, 3), 随机实数(-2, 2), 随机实数(-3, 3)), 1);
		伤害(从数组中移除(范围内玩家(被攻击方, 7, 队伍2, 表面), 事件玩家), 事件玩家, 10);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 被攻击方, 1);
		禁用 设置状态(从数组中移除(范围内玩家(被攻击方, 7, 所有队伍, 表面), 事件玩家), 事件玩家, 昏迷, 0.200);
		等待(0.120, 无视条件);
		伤害(从数组中移除(范围内玩家(被攻击方, 7, 队伍2, 表面), 事件玩家), 事件玩家, 15);
		禁用 设置状态(从数组中移除(范围内玩家(被攻击方, 7, 所有队伍, 表面), 事件玩家), 事件玩家, 昏迷, 2);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 眼睛位置(被攻击方) + 矢量(随机实数(-3, 3), 随机实数(-2, 2), 随机实数(-3, 3)), 1);
		等待(0.120, 无视条件);
	}
}

规则("2.2斯塔缇克电刃：攻击是会连锁伤害周围的敌方。兹~爽！")
{
	事件
	{
		玩家造成伤害;
		队伍2;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 2) == 真;
	}

	动作
	{
		事件玩家.DD = 7;
		追踪玩家变量频率(事件玩家, DD, 0, 1, 速率及最终值);
		伤害(从数组中移除(范围内玩家(被攻击方, 7, 队伍1, 表面), 事件玩家), 事件玩家, 5);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 眼睛位置(被攻击方) + 矢量(随机实数(-3, 3), 随机实数(-2, 2), 随机实数(-3, 3)), 1);
		禁用 设置状态(从数组中移除(范围内玩家(事件玩家, 10, 所有队伍, 表面), 事件玩家), 事件玩家, 昏迷, 0.500);
		等待(0.120, 无视条件);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 眼睛位置(被攻击方) + 矢量(随机实数(-3, 3), 随机实数(-2, 2), 随机实数(-3, 3)), 1);
		伤害(从数组中移除(范围内玩家(被攻击方, 7, 队伍1, 表面), 事件玩家), 事件玩家, 10);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 被攻击方, 1);
		禁用 设置状态(从数组中移除(范围内玩家(被攻击方, 7, 所有队伍, 表面), 事件玩家), 事件玩家, 昏迷, 0.200);
		等待(0.120, 无视条件);
		伤害(从数组中移除(范围内玩家(被攻击方, 7, 队伍1, 表面), 事件玩家), 事件玩家, 15);
		禁用 设置状态(从数组中移除(范围内玩家(被攻击方, 7, 所有队伍, 表面), 事件玩家), 事件玩家, 昏迷, 2);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 眼睛位置(被攻击方) + 矢量(随机实数(-3, 3), 随机实数(-2, 2), 随机实数(-3, 3)), 1);
		等待(0.120, 无视条件);
	}
}

规则("4.败血症：伤口无法凝结，受到伤害后会持续掉血。啊啊啊啊，创可贴！！！")
{
	事件
	{
		玩家受到伤害;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 4) == 真;
		数组包含(事件玩家.TF, 10) == 假;
	}

	动作
	{
		大字体信息(事件玩家, 自定义字符串("滋！伤口开始冒血了～"));
		While(标准化生命值(事件玩家) >= 0.001);
			伤害(事件玩家, 无, 生命值(事件玩家) / 随机整数(30, 50));
			等待(1, 无视条件);
		End;
	}
}

规则("5.不朽之心：死亡后会复活，cd60。这心怎么看起来干巴巴的？")
{
	事件
	{
		玩家阵亡;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 5) == 真;
		事件玩家.TF_DY[8] != 1;
	}

	动作
	{
		If(事件玩家.TF_DY[2] == 1);
			大字体信息(事件玩家, 自定义字符串("不朽！"));
			等待(0.750, 无视条件);
			大字体信息(事件玩家, 自定义字符串("这就是不朽的力量么？"));
			重生(事件玩家);
			事件玩家.TF_DY[4] = 1;
			事件玩家.TF_DY[2] = 0;
		Else;
			调用子程序(RESPAWN);
			事件玩家.TF_DY[3] = 1;
		End;
	}
}

规则("5.1不朽之心子程序")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 5) == 真;
		事件玩家.TF_DY[4] == 1;
		事件玩家.TF_DY[8] != 1;
	}

	动作
	{
		事件玩家.TF_DY[4] = 0;
		事件玩家.Time[0] = 60;
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("CD"), 事件玩家.Time[0]), 无, 无, 顶部, 1, 蓝色, 白色, 白色, 可见和字符串, 默认可见度);
		事件玩家.HUDWB[3] = 上一个文本ID;
		While(事件玩家.Time[0] != 0);
			事件玩家.Time[0] -= 1;
			等待(1, 无视条件);
			If(事件玩家.TF_DY[3] == 1);
				中断;
			End;
		End;
		If(事件玩家.TF_DY[3] == 0);
			事件玩家.TF_DY[2] = 1;
		End;
		事件玩家.TF_DY[3] = 0;
		等待(0.250, 无视条件);
		消除HUD文本(事件玩家.HUDWB[3]);
	}
}

规则("8.纵火狂：攻击赋带燃烧效果。fffffffff")
{
	事件
	{
		玩家造成伤害;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 8) == 真;
	}

	动作
	{
		设置状态(被攻击方, 事件玩家, 点燃, 2);
		等待(0.500, 无视条件);
	}
}

规则("9.44号药剂：按蹲+互动，不死效果30秒，结束立即死亡。这也太难喝了！")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 9) == 真;
		按钮被按下(事件玩家, 蹲下) == 真;
		按钮被按下(事件玩家, 互动) == 真;
	}

	动作
	{
		事件玩家.TF_DY[8] = 1;
		设置状态(事件玩家, 无, 无法杀死, 30);
		大字体信息(事件玩家, 自定义字符串("不死30秒！"));
		创建图标(所有玩家(所有队伍), 事件玩家, 骷髅, 可见和位置, 红色, 真);
		事件玩家.id[1] = 最后创建的实体;
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("死亡倒计时"), 事件玩家.Time[1]), 无, 无, 顶部, 1, 红色, 白色, 白色, 可见和字符串, 默认可见度);
		事件玩家.HUDWB[4] = 上一个文本ID;
		事件玩家.Time[1] = 30;
		While(事件玩家.Time[1] != 0);
			事件玩家.Time[1] -= 1;
			等待(1, 无视条件);
		End;
		击杀(事件玩家, 无);
		等待(0.250, 无视条件);
		消除HUD文本(事件玩家.HUDWB[4]);
	}
}

规则("12.单片眼睛：攻击沉默敌人")
{
	事件
	{
		玩家造成伤害;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 12) == 真;
	}

	动作
	{
		设置状态(被攻击方, 事件玩家, 被入侵, 1);
		等待(0.750, 无视条件);
	}
}

规则("13.电子羊：跳跃时额外进行一次跳跃cd4.     仿生人也会做梦吗？")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 13) == 真;
		按钮被按下(事件玩家, 跳跃) == 真;
	}

	动作
	{
		等待(0.250, 无视条件);
		施加推力(事件玩家, 方向(所选位置(事件玩家), 眼睛位置(事件玩家) + 面朝方向(事件玩家)), 10, 至地图, 取消相反运动);
		施加推力(事件玩家, 上, 3.800, 至地图, 取消相反运动);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 自定义字符串("cd"), 事件玩家.Time[2]), 无, 无, 顶部, 1, 蓝色, 白色, 白色, 可见和字符串, 默认可见度);
		事件玩家.HUDWB[5] = 上一个文本ID;
		事件玩家.Time[2] = 4;
		While(事件玩家.Time[2] != 0);
			事件玩家.Time[2] -= 1;
			等待(1, 无视条件);
		End;
		消除HUD文本(事件玩家.HUDWB[5]);
	}
}

规则("14.伽马射线：子弹穿透墙面     没有什么可以阻挡你了！")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		黑百合;
	}

	条件
	{
		数组包含(事件玩家.TF, 14) == 真;
		正在使用主要武器(事件玩家) == 真;
	}

	动作
	{
		伤害(视角中的玩家(事件玩家, 队伍2, 7), 事件玩家, 事件玩家.sx[3] / 2);
	}
}

规则("14.1伽马射线子程序")
{
	事件
	{
		持续 - 每名玩家;
		队伍2;
		黑百合;
	}

	条件
	{
		数组包含(事件玩家.TF, 14) == 真;
		正在使用主要武器(事件玩家) == 真;
	}

	动作
	{
		伤害(视角中的玩家(事件玩家, 队伍1, 7), 事件玩家, 事件玩家.sx[3] / 2);
	}
}

规则("15.皇家空军勋章：在空中伤害翻倍")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 15) == 真;
		正在空中(事件玩家) == 真;
	}

	动作
	{
		事件玩家.sx[3] = 事件玩家.sx[3] * 2;
		设置造成伤害(事件玩家, 事件玩家.sx[3]);
		事件玩家.TF_DY[7] = 1;
	}
}

规则("15.1皇家空军勋章子程序")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.TF, 15) == 真;
		在地面上(事件玩家) == 真;
		事件玩家.TF_DY[7] == 1;
	}

	动作
	{
		事件玩家.sx[3] = 取整(事件玩家.sx[3] * 0.500, 上);
		设置造成伤害(事件玩家, 事件玩家.sx[3]);
		事件玩家.TF_DY[7] = 0;
	}
}