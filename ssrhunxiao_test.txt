变量
{
	玩家:
		26: llliliiili
		27: liiiliiili
		28: llllliliii
		29: iiiiiiiiii
		30: iiiliiiiii
		31: lillliliii
		32: ilililiiii
		34: llliliiiii
}

子程序
{
	8: llilllilil
	9: lllliliill
	10: lllliiilii
	11: liiiliilii
	12: llllliliii
	13: lllliliili
	14: llllllllll
	15: illliiiili
}

禁用 规则("==========================================================全局=============================================================")
{
	事件
	{
		持续 - 全局;
	}
}

禁用 规则("//临时属性显示HUD")
{
	事件
	{
		玩家加入比赛;
		双方;
		全部;
	}

	动作
	{
		创建HUD文本(事件玩家, 自定义字符串("天赋{0}{1}", 事件玩家.llllliliii[0], 事件玩家.llllliliii[1]), 无, 无, 顶部, 0, 白色, 白色, 白色, 可见和字符串, 默认可见度);
	}
}

规则("//负载")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		创建HUD文本(主机玩家, 字符串("{0}：{1}", 字符串("服务器负载"), 字符串("{0}%", 服务器负载)), 无, 无, 左边, 100, 白色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(主机玩家, 字符串("{0}：{1}", 字符串("服务器负载平均值"), 字符串("{0}%", 服务器负载平均值)), 无, 无, 左边, 101, 白色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(主机玩家, 字符串("{0}：{1}", 字符串("服务器负载峰值"), 字符串("{0}%", 服务器负载峰值)), 无, 无, 左边, 102, 白色, 白色, 白色, 可见和字符串, 默认可见度);
	}
}

规则("//Debug 机器人生成")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		按钮被按下(主机玩家, 互动) == 真;
	}

	动作
	{
		生成机器人(英雄(黑百合), 所有队伍, -1, 矢量(-1.856, 1.551, 6.125), 矢量(0, 0, 0));
	}
}

规则("//Debug 机器人删除")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 蹲下) == 真;
		按钮被按下(事件玩家, 互动) == 真;
	}

	动作
	{
		移除所有机器人;
	}
}

规则("//关闭游戏预设条件")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		游戏正在进行中 == 真;
	}

	动作
	{
		关闭游戏预设完成条件;
		设置比赛时间(3000);
		等待(2990, 无视条件);
		如条件为”真“则循环;
	}
}

规则("//关闭游戏等待")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		游戏正在进行中 != 真;
	}

	动作
	{
		设置比赛时间(1);
	}
}

禁用 规则("=======================================================主程序=====================================================")
{
	事件
	{
		持续 - 全局;
	}
}

规则("……主程序入口")
{
	事件
	{
		玩家加入比赛;
		双方;
		全部;
	}

	动作
	{
		调用子程序(lllliliili);
		调用子程序(lllliliill);
		调用子程序(llllliliii);
	}
}

禁用 规则("===================================================SSR升级部分============================================================")
{
	事件
	{
		持续 - 全局;
	}
}

规则("@->属性初始化 模块 /lllliliill")
{
	事件
	{
		子程序;
		lllliliill;
	}

	动作
	{
		事件玩家.llliliiili[0] = 0;
		事件玩家.llliliiili[1] = 随机整数(1, 80);
		"生命"
		事件玩家.llliliiili[2] = 事件玩家.llliliiili[1] * 随机整数(5, 10);
		调用子程序(illliiiili);
		"攻击"
		事件玩家.llliliiili[3] = 事件玩家.llliliiili[1] * 随机整数(5, 10);
		设置造成伤害(事件玩家, 事件玩家.llliliiili[3]);
		"速度"
		事件玩家.llliliiili[4] = 随机整数(95, 120);
		设置移动速度(事件玩家, 事件玩家.llliliiili[4]);
		"受到治疗"
		事件玩家.llliliiili[5] = 事件玩家.llliliiili[1] * 随机整数(2, 4);
		设置受到治疗(事件玩家, 事件玩家.llliliiili[5]);
		"造成治疗"
		事件玩家.llliliiili[6] = 事件玩家.llliliiili[1] * 随机整数(2, 4);
		设置造成治疗(事件玩家, 事件玩家.llliliiili[6]);
		"防御"
		事件玩家.llliliiili[7] = 100;
		设置受到伤害(事件玩家, 事件玩家.llliliiili[7]);
		调用子程序(lllliiilii);
		调用子程序(liiiliilii);
	}
}

规则("@->属性刷新 模块 /llilllilil")
{
	事件
	{
		子程序;
		llilllilil;
	}

	动作
	{
		事件玩家.llliliiili[1] += 事件玩家.llliliiili[8];
		"满级限制"
		If(事件玩家.llliliiili[1] >= 100);
			事件玩家.llliliiili[1] = 100;
			禁用 事件玩家.llliliiili[2] = 5000;
			禁用 事件玩家.llliliiili[3] = 1500;
			禁用 事件玩家.llliliiili[4] = 200;
			事件玩家.llliliiili[5] = 10;
			禁用 事件玩家.llliliiili[6] = 200;
			禁用 事件玩家.llliliiili[7] = 70;
		"升级属性"
		Else;
			"生命"
			事件玩家.llliliiili[9] = 事件玩家.llliliiili[8] * 随机整数(30, 80);
			事件玩家.llliliiili[2] += 事件玩家.llliliiili[9];
			"攻击"
			事件玩家.llliliiili[10] = 事件玩家.llliliiili[8] * 随机整数(10, 15);
			事件玩家.llliliiili[3] += 事件玩家.llliliiili[10];
			"速度"
			事件玩家.llliliiili[11] = 事件玩家.llliliiili[8] / 10;
			事件玩家.llliliiili[4] += 事件玩家.llliliiili[11];
			"受到治疗"
			事件玩家.llliliiili[12] = 事件玩家.llliliiili[8] * 随机整数(2, 5);
			事件玩家.llliliiili[5] += 事件玩家.llliliiili[12];
			"造成治疗"
			事件玩家.llliliiili[13] = 事件玩家.llliliiili[8] * 随机整数(2, 5);
			事件玩家.llliliiili[6] += 事件玩家.llliliiili[13];
			"防御"
			事件玩家.llliliiili[14] = 事件玩家.llliliiili[8] / 50;
			事件玩家.llliliiili[7] -= 事件玩家.llliliiili[14];
		End;
		调用子程序(illliiiili);
		设置造成伤害(事件玩家, 事件玩家.llliliiili[3]);
		设置移动速度(事件玩家, 事件玩家.llliliiili[4]);
		设置受到治疗(事件玩家, 事件玩家.llliliiili[5]);
		设置造成治疗(事件玩家, 事件玩家.llliliiili[6]);
		设置受到伤害(事件玩家, 事件玩家.llliliiili[7]);
		调用子程序(lllliiilii);
		调用子程序(liiiliilii);
	}
}

规则("@->生命值变动 模块 /illliiiili")
{
	事件
	{
		子程序;
		illliiiili;
	}

	动作
	{
		If(事件玩家.llliliiili[1] == 100);
			If(事件玩家.llliliiili[0] == 0);
				移除玩家的生命池(事件玩家.llliliiili[17]);
				为玩家添加生命池(事件玩家, 生命值, 事件玩家.llliliiili[2], 真, 真);
				事件玩家.llliliiili[17] = 最后创建的生命池;
				事件玩家.llliliiili[0] = 1;
			End;
		Else;
			移除玩家的生命池(事件玩家.llliliiili[17]);
			为玩家添加生命池(事件玩家, 生命值, 事件玩家.llliliiili[2], 真, 真);
			事件玩家.llliliiili[17] = 最后创建的生命池;
		End;
	}
}

规则("@->头顶lllliiilii 模块 /lllliiilii")
{
	事件
	{
		子程序;
		lllliiilii;
	}

	动作
	{
		消除地图文本(事件玩家.liiiliiili[0]);
		If(事件玩家.llliliiili[1] == 100);
			创建地图文本(所有玩家(所有队伍), 自定义字符串("原初之混沌"), 事件玩家, 6, 根据表面截取, 可见，位置和字符串, 红色, 默认可见度);
		Else If(事件玩家.llliliiili[1] >= 80);
			创建地图文本(所有玩家(所有队伍), 自定义字符串("混沌魔神"), 事件玩家, 5, 根据表面截取, 可见，位置和字符串, 黄色, 默认可见度);
		Else If(事件玩家.llliliiili[1] >= 60);
			创建地图文本(所有玩家(所有队伍), 自定义字符串("魔神"), 事件玩家, 4, 根据表面截取, 可见，位置和字符串, 橙色, 默认可见度);
		Else If(事件玩家.llliliiili[1] >= 40);
			创建地图文本(所有玩家(所有队伍), 自定义字符串("恶魔"), 事件玩家, 3, 根据表面截取, 可见，位置和字符串, 紫色, 默认可见度);
		Else If(事件玩家.llliliiili[1] >= 20);
			创建地图文本(所有玩家(所有队伍), 自定义字符串("人类"), 事件玩家, 2, 根据表面截取, 可见，位置和字符串, 蓝色, 默认可见度);
		Else;
			创建地图文本(所有玩家(所有队伍), 自定义字符串("哥布林"), 事件玩家, 1, 根据表面截取, 可见，位置和字符串, 白色, 默认可见度);
		End;
		事件玩家.liiiliiili[0] = 上一个文本ID;
	}
}

规则("@->玩家HUD 模块 /hud")
{
	事件
	{
		子程序;
		liiiliilii;
	}

	动作
	{
		消除HUD文本(事件玩家.liiiliiili[1]);
		禁用 等待(0.100, 无视条件);
		If(事件玩家.llliliiili[1] == 100);
			创建HUD文本(事件玩家, 自定义字符串("原初之混沌\r\n满级"), 无, 无, 左边, 0, 红色, 白色, 白色, 可见和字符串, 默认可见度);
		Else If(事件玩家.llliliiili[1] >= 80);
			创建HUD文本(事件玩家, 自定义字符串("混沌魔神\r\n等级{0}", 事件玩家.llliliiili[1]), 无, 无, 左边, 0, 黄色, 白色, 白色, 可见和字符串, 默认可见度);
		Else If(事件玩家.llliliiili[1] >= 60);
			创建HUD文本(事件玩家, 自定义字符串("魔神\r\n等级{0}", 事件玩家.llliliiili[1]), 无, 无, 左边, 0, 橙色, 白色, 白色, 可见和字符串, 默认可见度);
		Else If(事件玩家.llliliiili[1] >= 40);
			创建HUD文本(事件玩家, 自定义字符串("恶魔\r\n等级{0}", 事件玩家.llliliiili[1]), 无, 无, 左边, 0, 紫色, 白色, 白色, 可见和字符串, 默认可见度);
		Else If(事件玩家.llliliiili[1] >= 20);
			创建HUD文本(事件玩家, 自定义字符串("人类\r\n等级{0}", 事件玩家.llliliiili[1]), 无, 无, 左边, 0, 蓝色, 白色, 白色, 可见和字符串, 默认可见度);
		Else;
			创建HUD文本(事件玩家, 自定义字符串("哥布林\r\n等级{0}", 事件玩家.llliliiili[1]), 无, 无, 左边, 0, 白色, 白色, 白色, 可见和字符串, 默认可见度);
		End;
		事件玩家.liiiliiili[1] = 上一个文本ID;
	}
}

规则("@->属性天赋HUD 模块 /lllliliili")
{
	事件
	{
		子程序;
		lllliliili;
	}

	动作
	{
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 字符串("生命"), 事件玩家.llliliiili[2]), 无, 无, 左边, 2, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 字符串("伤害"), 事件玩家.llliliiili[3]), 无, 无, 左边, 3, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 字符串("治疗"), 事件玩家.llliliiili[5]), 无, 无, 左边, 4, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 字符串("速度"), 事件玩家.llliliiili[4]), 无, 无, 左边, 5, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 字符串("防御"), 事件玩家.llliliiili[7]), 无, 无, 左边, 6, 绿色, 白色, 白色, 可见和字符串, 默认可见度);
		"规则"
		创建HUD文本(事件玩家, 自定义字符串("杀敌升级ing\r\n作者：HUGH#52711\r\n未完成，欢迎提供意见~\r\n这里是个测试房，可能随时重开。\r\n欢迎有"), 无, 无, 右边, 1, 白色, 蓝色, 白色, 可见和字符串, 默认可见度);
		"天赋"
		创建HUD文本(事件玩家, 事件玩家.iiiliiiiii[0], 无, 无, 右边, 0, 黄色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 事件玩家.iiiliiiiii[1], 无, 无, 右边, 0, 黄色, 白色, 白色, 可见和字符串, 默认可见度);
	}
}

规则("#击杀调用敌方等级")
{
	事件
	{
		玩家造成伤害;
		双方;
		全部;
	}

	动作
	{
		攻击方.llliliiili[15] = 被攻击方.llliliiili[1];
	}
}

规则("#击杀升级")
{
	事件
	{
		玩家参与消灭;
		双方;
		全部;
	}

	条件
	{
		存活(事件玩家) == 真;
	}

	动作
	{
		事件玩家.llliliiili[16] = 取整(事件玩家.llliliiili[15] / 5, 上);
		If(事件玩家.llliliiili[1] >= 80);
			事件玩家.llliliiili[8] = 取整(事件玩家.llliliiili[16] / 4, 上);
		Else If(事件玩家.llliliiili[1] >= 60);
			事件玩家.llliliiili[8] = 取整(事件玩家.llliliiili[16] / 3, 上);
		Else;
			事件玩家.llliliiili[8] = 事件玩家.llliliiili[16];
		End;
		调用子程序(llilllilil);
		"击杀报幕"
		If(事件玩家.llliliiili[1] != 100);
			小字体信息(事件玩家, 自定义字符串("提升了{0}级！", 事件玩家.llliliiili[8]));
		End;
	}
}

规则("#击杀复生")
{
	事件
	{
		玩家阵亡;
		双方;
		全部;
	}

	条件
	{
		"不朽之心触发条件"
		禁用 事件玩家.iiiliiiiii[2] == 0;
	}

	动作
	{
		"用于等待击杀等级调用"
		等待(1, 无视条件);
		If(事件玩家.iiiliiiiii[2] == 0);
			调用子程序(lllliliill);
			"消除满级debuff hud"
			消除HUD文本(事件玩家.liiiliiili[3]);
			消除效果(事件玩家.llliliiiii[1]);
			"天赋初始化"
			调用子程序(llllliliii);
			事件玩家.llliliiili[8] = 0;
			事件玩家.iiiliiiiii[2] = 0;
		End;
	}
}

规则("#满级限制")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.llliliiili[1] == 100;
	}

	动作
	{
		消除HUD文本(事件玩家.liiiliiili[3]);
		创建HUD文本(事件玩家, 自定义字符串("癫狂：目睹了世界的真相，陷入了疯狂，每秒受到{0}伤害", 生命值(事件玩家) / 随机整数(10, 20)), 无, 无, 右边, 0, 红色, 白色, 白色, 可见和字符串, 默认可见度);
		事件玩家.liiiliiili[3] = 上一个文本ID;
		创建效果(所有玩家(所有队伍), 光柱, 红色, 事件玩家, 0.250, 可见，位置和半径);
		事件玩家.llliliiiii[1] = 最后创建的实体;
		While(标准化生命值(事件玩家) >= 0.010);
			伤害(事件玩家, 无, 生命值(事件玩家) / 随机整数(10, 20));
			等待(1, 无视条件);
		End;
	}
}

禁用 规则("=======================================================天赋部分==============================================================")
{
	事件
	{
		持续 - 全局;
	}
}

规则("@->天赋初始化 模块 /llllliliii")
{
	事件
	{
		子程序;
		llllliliii;
	}

	动作
	{
		"天赋抽奖初始化"
		事件玩家.llllliliii[0] = 0;
		事件玩家.llllliliii[1] = 0;
		"天赋抽奖最大值"
		事件玩家.ilililiiii = 7;
		While(事件玩家.llllliliii[0] == 事件玩家.llllliliii[1]);
			事件玩家.llllliliii[0] = 随机整数(1, 事件玩家.ilililiiii);
			事件玩家.llllliliii[1] = 随机整数(1, 事件玩家.ilililiiii);
		End;
		"天赋文本"
		事件玩家.iiiiiiiiii = 数组(自定义字符串("空文本"), 自定义字符串("玻璃大炮：攻击力提升500%，攻击有25%概率被秒杀。pong！awsl"), 自定义字符串("斯塔缇克电刃：攻击是会连锁伤害周围的敌方。兹~爽！"), 自定义字符串(
			"非酋：没有任何属性。老倒霉蛋了"), 自定义字符串("败血症：伤口无法凝结，受到伤害后会持续掉血。啊啊啊！创可贴！！！"), 自定义字符串("不朽之心：死亡后会复活，cd60。这心怎么看起来干巴巴的？"), 自定义字符串(
			"扁酒壶：攻击提升100%，防御降低50%。对某些人来说，这就是生活的意义。"), 自定义字符串("超级标志：全属性提升30%。我 就 是 超 人 ！"));
		调用子程序(llllllllll);
		"天赋文本调用"
		事件玩家.iiiliiiiii[0] = 事件玩家.iiiiiiiiii[事件玩家.llllliliii[0]];
		事件玩家.iiiliiiiii[1] = 事件玩家.iiiiiiiiii[事件玩家.llllliliii[1]];
	}
}

规则("@->天赋效果调用 模块 /llllllllll")
{
	事件
	{
		子程序;
		llllllllll;
	}

	动作
	{
		"玻璃大炮"
		If(数组包含(事件玩家.llllliliii, 1) == 真);
			事件玩家.llliliiili[3] = 事件玩家.llliliiili[3] * 5;
		End;
		"扁酒壶"
		If(数组包含(事件玩家.llllliliii, 6) == 真);
			事件玩家.llliliiili[3] = 事件玩家.llliliiili[3] * 2;
			事件玩家.llliliiili[7] = 事件玩家.llliliiili[7] * 1.500;
		End;
		"超级标志"
		If(数组包含(事件玩家.llllliliii, 7) == 真);
			事件玩家.llliliiili[2] = 事件玩家.llliliiili[2] * 1.300;
			事件玩家.llliliiili[3] = 事件玩家.llliliiili[3] * 1.300;
			事件玩家.llliliiili[4] = 事件玩家.llliliiili[4] * 1.300;
			事件玩家.llliliiili[5] = 事件玩家.llliliiili[5] * 1.300;
			事件玩家.llliliiili[6] = 事件玩家.llliliiili[6] * 1.300;
			事件玩家.llliliiili[7] = 事件玩家.llliliiili[7] * 0.700;
		End;
		调用子程序(llilllilil);
	}
}

规则("1.玻璃大炮：攻击力提高100%，攻击有25%几率可能秒杀自己。pong！awsl")
{
	事件
	{
		玩家造成伤害;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.llllliliii, 1) == 真;
	}

	动作
	{
		根据条件跳过(随机整数(1, 100) >= 25, 2);
		击杀(事件玩家, 无);
		大字体信息(事件玩家, 自定义字符串("啊！你碎了~"));
	}
}

规则("2.斯塔缇克电刃：攻击是会连锁伤害周围的敌方。兹~爽！")
{
	事件
	{
		玩家造成伤害;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.llllliliii, 2) == 真;
	}

	动作
	{
		事件玩家.lillliliii = 7;
		追踪玩家变量频率(事件玩家, lillliliii, 0, 1, 速率及最终值);
		伤害(从数组中移除(范围内玩家(被攻击方, 7, 所有队伍, 表面), 事件玩家), 事件玩家, 7);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 眼睛位置(被攻击方) + 矢量(随机实数(-3, 3), 随机实数(-2, 2), 随机实数(-3, 3)), 1);
		设置状态(从数组中移除(范围内玩家(事件玩家, 10, 所有队伍, 表面), 事件玩家), 事件玩家, 昏迷, 0.500);
		等待(0.120, 无视条件);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 眼睛位置(被攻击方) + 矢量(随机实数(-3, 3), 随机实数(-2, 2), 随机实数(-3, 3)), 1);
		伤害(从数组中移除(范围内玩家(被攻击方, 7, 所有队伍, 表面), 事件玩家), 事件玩家, 50);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 被攻击方, 1);
		设置状态(从数组中移除(范围内玩家(被攻击方, 7, 所有队伍, 表面), 事件玩家), 事件玩家, 昏迷, 0.200);
		等待(0.120, 无视条件);
		伤害(从数组中移除(范围内玩家(被攻击方, 7, 所有队伍, 表面), 事件玩家), 事件玩家, 50);
		设置状态(从数组中移除(范围内玩家(被攻击方, 7, 所有队伍, 表面), 事件玩家), 事件玩家, 昏迷, 2);
		播放效果(所有玩家(所有队伍), 有害爆炸, 红色, 眼睛位置(被攻击方) + 矢量(随机实数(-3, 3), 随机实数(-2, 2), 随机实数(-3, 3)), 1);
		等待(0.120, 无视条件);
	}
}

规则("3.非酋：没有任何属性。老倒霉蛋了")
{
	事件
	{
		持续 - 全局;
	}
}

规则("4.败血症：伤口无法凝结，受到伤害后会持续掉血。啊啊啊啊，创可贴！！！")
{
	事件
	{
		玩家受到伤害;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.llllliliii, 4) == 真;
	}

	动作
	{
		大字体信息(事件玩家, 自定义字符串("滋！伤口开始冒血了～"));
		While(标准化生命值(事件玩家) >= 0.001);
			伤害(事件玩家, 无, 生命值(事件玩家) / 随机整数(30, 100));
			等待(1, 无视条件);
		End;
	}
}

规则("5.不朽之心：死亡后会复活，cd60。这心怎么看起来干巴巴的？")
{
	事件
	{
		玩家阵亡;
		双方;
		全部;
	}

	条件
	{
		数组包含(事件玩家.llllliliii, 5) == 真;
	}

	动作
	{
		事件玩家.iiiliiiiii[2] = 1;
		大字体信息(事件玩家, 自定义字符串("这就是不朽的力量么？"));
		等待(1, 无视条件);
		重生(事件玩家);
		等待(1, 无视条件);
		事件玩家.iiiliiiiii[2] = 0;
		等待(60, 无视条件);
	}
}

规则("6.扁酒壶：攻击提升100%，防御降低50%。对某些人来说，这就是生活的意义。")
{
	事件
	{
		持续 - 全局;
	}
}

规则("7.超级标志：全属性提升30%。我 就 是 超 人 ！")
{
	事件
	{
		持续 - 全局;
	}
}